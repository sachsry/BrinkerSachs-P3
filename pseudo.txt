Part 1 Pseudo

Variables:
edgeHash = [startNode] => [endNode => weight]
internal time
cycle time (how long until you send)

Functions:
*** connect(node,port,message) -> connects and sends a message

*** buildFile(type,edges) -> type corresponds to <Update> <Timer> or <Delete>
					      -> edges is the information you want to forward
	builds file in the following form:
	<Type>
	Source sourceNodeName
	startNode,endNode,weight
	startNode,endNode,weight
	...

*** forwardFile(file,node) -> send file to node
	connect(node,port,file)

*** recieveFile(file,node) -> file = file recieved
						   -> node = source node
	type = first line of file
	case "Timer"
		for (line: file)
			// If the current node does not have an edge in the file
				// Send the file to all the current node's neighbors, but not the source node
				// return
	case "Update"
		// If the current node needs to make an update,
			// Send the file to all the current node's neighbors, but not the source node
			// return
	case "Delete"
		// If the current node has the edge
			// Send the file to all the current node's neighbors, but not the source node
			// return

Other notes:
	- In main, whenever there is a timer, update, or delete
	- Send all your edges to all your neighbors
	- We might want to make EDGEB make an update file too